<!--***********************************************************************************

   Extended WPF Toolkit

   Copyright (C) 2007-2013 Xceed Software Inc.

   This program is provided to you under the terms of the Microsoft Public
   License (Ms-PL) as published at http://wpftoolkit.codeplex.com/license 

   For more features, controls, and fast professional support,
   pick up the Plus Edition at http://xceed.com/wpf_toolkit

   Stay informed: follow @datagrid on Twitter or Like http://facebook.com/datagrids

  **********************************************************************************-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xceed.Wpf.Toolkit"
                    xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes"
                    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters">

   <!-- =============================================================================== -->
   <!-- ResourceDictionary for TimePicker and related controls                          -->
   <!-- =============================================================================== -->

   <conv:InverseBoolConverter x:Key="InverseBoolConverter" />
   <conv:TimeFormatToDateTimeFormatConverter x:Key="TimeFormatToDateTimeFormatConverter" />

   <DataTemplate x:Key="DefaultWatermarkTemplate">
      <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" Margin="0,0,3,0" />
   </DataTemplate>

   <LinearGradientBrush x:Key="PopupDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
      <GradientStop Color="#FFA3AEB9" Offset="0" />
      <GradientStop Color="#FF8399A9" Offset="0.375" />
      <GradientStop Color="#FF718597" Offset="0.375" />
      <GradientStop Color="#FF617584" Offset="1" />
   </LinearGradientBrush>

   <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
      <LinearGradientBrush.GradientStops>
         <GradientStopCollection>
            <GradientStop Offset="0" Color="#FFffffff" />
            <GradientStop Offset="1" Color="#FFE8EBED" />
         </GradientStopCollection>
      </LinearGradientBrush.GradientStops>
   </LinearGradientBrush>

   <Style x:Key="TimePickerToggleButtonStyle" TargetType="ToggleButton">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ToggleButton">
               <Grid SnapsToDevicePixels="True">
                  <chrome:ButtonChrome x:Name="ToggleButtonChrome"
                                       CornerRadius="0,2.75,2.75,0"
                                       RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:TimePicker}}"
                                       RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:TimePicker}}"
                                       RenderMouseOver="{TemplateBinding IsMouseOver}"
                                       RenderPressed="{TemplateBinding IsPressed}">

                     <Grid>
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition Width="*" />
                           <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid x:Name="arrowGlyph" IsHitTestVisible="False" Grid.Column="1" Margin="5">
                            <Path x:Name="Arrow" Width="7" Height="4" Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" Fill="#FF000000" />
                        </Grid>
                     </Grid>
                  </chrome:ButtonChrome>
               </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <SolidColorBrush x:Key="ListItemHover" Color="#FFE7F5FD" />

   <Style x:Key="TimeItemStyle" TargetType="ListBoxItem">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBoxItem">
               <Border Name="Border" SnapsToDevicePixels="true">
                  <ContentPresenter Margin="4" />
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="Border" Property="Background" Value="{StaticResource ListItemHover}" />
                  </Trigger>
                  <Trigger Property="IsSelected" Value="True">
                     <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                     <Setter Property="Foreground" Value="White" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!-- =============================================================================== -->
   <!-- TimePicker                                                                      -->
   <!-- =============================================================================== -->

   <Style TargetType="{x:Type local:TimePicker}">
      <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type local:TimePicker}">
               <Border>
                  <Grid>
                     <Grid>
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition Width="*" />
                           <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <local:DateTimeUpDown x:Name="PART_TimeUpDown" 
                                              BorderThickness="1,1,0,1"
                                              Background="{TemplateBinding Background}"
                                              Foreground="{TemplateBinding Foreground}"
                                              ContextMenu="{TemplateBinding ContextMenu}"
                                              AllowSpin="{TemplateBinding AllowSpin}"
                                              TabIndex="{TemplateBinding TabIndex}"
                                              Format="{TemplateBinding Format, Converter={StaticResource TimeFormatToDateTimeFormatConverter}}"
                                              FormatString="{TemplateBinding FormatString}"
                                              ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}"
                                              Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                              Watermark="{TemplateBinding Watermark}"
                                              WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
                                              TextAlignment="{TemplateBinding TextAlignment}"/>
                        <ToggleButton x:Name="_timePickerToggleButton"
                                      Grid.Column="1"
                                      Focusable="False"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource TimePickerToggleButtonStyle}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}" />
                     </Grid>
                     <Popup x:Name="PART_Popup"
                            IsOpen="{Binding IsChecked, ElementName=_timePickerToggleButton}"
                            StaysOpen="False">
                        <Border BorderThickness="1" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupDarkBorderBrush}">
                           <Grid>
                              <ListBox x:Name="PART_TimeListItems"
                                       BorderThickness="0"
                                       Width="150"
                                       Height="130"
                                       DisplayMemberPath="Display"
                                       ItemContainerStyle="{StaticResource TimeItemStyle}" />
                           </Grid>
                        </Border>
                     </Popup>
                  </Grid>
               </Border>
                <ControlTemplate.Triggers>
                   <Trigger Property="IsFocused" Value="True">
                       <Setter TargetName="PART_TimeUpDown" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TimeUpDown}" />
                   </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

</ResourceDictionary>
